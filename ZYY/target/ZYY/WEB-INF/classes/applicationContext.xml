<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd">
	<!-- 自动扫描与装配bean -->
	<context:component-scan base-package="com.bs"></context:component-scan>

	<!-- 导入外部的properties文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!--<context:property-placeholder location="classpath:redis.properties" />-->

	<bean id="propertiesReader"
		  class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!--&lt;!&ndash; 启用spring cache&ndash;&gt;-->
	<!--<cache:annotation-driven cache-manager="cacheManager" />-->

	<!-- 初始化数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		 destroy-method="close">
		<property name="driverClassName">
			<value>${driverClass}</value>
		</property>
		<property name="url">
			<value>${jdbcUrl}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password" value="${jdbc.password}"/>
		<!-- 连接池最大使用连接数 -->
		<property name="maxActive">
			<value>${jdbc.initialSize}</value>
		</property>
		<!-- 初始化连接大小 -->
		<property name="initialSize">
			<value>1</value>
		</property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait">
			<value>${jdbc.maxWait}</value>
		</property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle">
			<value>3</value>
		</property>
	</bean>

	<!-- mybatis文件配置，扫描所有mapper文件 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource" p:configLocation="classpath:mybatis-config.xml"
		p:mapperLocations="classpath*:mapper/**/*.xml" />

	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean id="zyy" class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="com.bs.dao.mapping" p:sqlSessionFactoryBeanName="sessionFactory" />
	<!-- 配置声明式事务管理（采用注解的方式） -->
	<!-- 对数据源进行事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
		
	<tx:annotation-driven transaction-manager="transactionManager" />

	<aop:aspectj-autoproxy />
    <!--使用缓存的话-->
	 <!--<import resource="applicationContext-cache.xml"/>-->
</beans>
